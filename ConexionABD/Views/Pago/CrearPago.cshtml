@model ConexionABD.Models.Pago

@{
    ViewBag.Title = "Crear Pago";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(m => m.Id, new { @id = "idAlumno" })

        <div class="form-group">
            @Html.LabelFor(model => model.NroFactura, "Número de Factura", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NroFactura, new { htmlAttributes = new { @class = "form-control", min = 0 } })
                @Html.ValidationMessageFor(model => model.NroFactura, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Detalle, "Concepto", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Detalle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Detalle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cobro, "Monto a Pagar", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cobro, new { htmlAttributes = new { @class = "form-control", min = 0 } })
                @Html.ValidationMessageFor(model => model.Cobro, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MontoPago, "Monto Cobrado", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MontoPago, new { htmlAttributes = new { @class = "form-control", min = 0 } })
                @Html.ValidationMessageFor(model => model.MontoPago, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Fecha, "Fecha", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Fecha, new { htmlAttributes = new { @type = "date", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Fecha, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="reset" value="Borrar Campos" class="btn btn-danger" />
                <input type="submit" value="Crear Pago" class="btn btn-primary" />
            </div>
        </div>
    </div>

    <div>
        <input type="button" class="btn btn-warning" value="Cancelar" onclick="location.href='@Url.Action("ListarAlumnos", "Alumno")'" />
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $('#Cobro').on('keyup', function () {
            if ($(this).val() < 0) {
                alert('Valor no válido')
            }
        })
    </script>

    <script>
        $('#MontoPago').on('keyup', function () {
            if ($(this).val() < 0) {
                alert('Valor no válido')
            }
        })
    </script>
}